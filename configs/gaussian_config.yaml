Optimizer:
    name: 'torch.optim.Adam'
    lr: 1.0e-4

Scheduler:
    name: 'torch.optim.lr_scheduler.ReduceLROnPlateau'
    factor: 0.5
    patience: 5

Dataset:
  data_path: 'data/worldclim2.zarr'
  points_path: '../coordinates.h5'
  normalised_stats_path: '../normalized_stats.json'
  data_key: 'land_coords' # 'ocean_coords'
  shuffle: True
  deg2rad: True



Model:
  GAUSSIAN_MODEL:
    name: 'models.implicit_neural_representations.inr_models.siren_model.GaussianModel'
    in_features: 2
    out_features: 2
    hidden_features: 128
    hidden_layers: 5
    final_bias: False
    scale_gaussian: 30.0
    weight_init: 0.1
    bias_init: 1.0
    residual_net: False
    encoding: None # 'sphere2vec' or 'dfs'
    r_min : 0.001
    r_max : 1.0
    scale: [10, 10] # [scale_lat, scale_lon] for dfs,  int for sphere2vec
    mode: "SphereC" # for basic sphere2vec, "SphereM" for multi-scale sphere2vec

  GAUSSIAN_FINER_MODEL:
    name: 'models.implicit_neural_representations.inr_models.siren_model.GaussianFinerModel'
    in_features: 2
    out_features: 2
    hidden_features: 128
    hidden_layers: 5
    final_bias: False
    scale_gaussian: 30.0
    first_k: 10 # set based on FINER++ Paper
    hidden_k: 10 # set based on FINER++ Paper
    omega_f: 2.5 # set based on FINER++ Paper
    residual_net: False # True is using residual connections
    encoding: None # 'sphere2vec' or 'dfs'
    r_min : 0.001
    r_max : 1.0
    scale: [10, 10] # [scale_lat, scale_lon] for dfs,  int for sphere2vec
    mode: "SphereC" # for basic sphere2vec, "SphereM" for multi-scale sphere2vec
